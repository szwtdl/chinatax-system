// utils/validator.uts

/**
 * 校验是否为合法的中国大陆手机号码
 */
export function isValidPhone(phone: string): boolean {
	const reg = /^1[3-9]\d{9}$/;
	return reg.test(phone);
}

/**
 * 校验是否为合法的中国大陆18位身份证号码
 */
export function isValidIDCard_old(id: string): boolean {
	const reg = /^[1-9]\d{5}(18|19|20|21)?\d{2}(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])\d{3}[\dXx]$/;
	if (!reg.test(id)) return false;

	const weights: number[] = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];
	const codes: string[] = ["1", "0", "X", "9", "8", "7", "6", "5", "4", "3", "2"];

	var sum: number = 0;
	for (let i = 0; i < 17; i++) {
		let num = parseInt(id.charAt(i))
		sum += num * weights[i]
	}

	let checkCode = codes[sum % 11];
	return checkCode == id.charAt(17).toUpperCase();
}

export function isValidIDCard(id: string): boolean {
	const reg = /^[1-9]\d{5}(18|19|20|21)?\d{2}(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])\d{3}[\dXx]$/;
	if (!reg.test(id)) return false;

	// 校验省份码（前2位）
	const validProvinceCodes = [
		11, 12, 13, 14, 15, // 北京 天津 河北 山西 内蒙古
		21, 22, 23,         // 辽宁 吉林 黑龙江
		31, 32, 33, 34, 35, 36, 37, // 上海 江苏 浙江 安徽 福建 江西 山东
		41, 42, 43, 44, 45, 46,     // 河南 湖北 湖南 广东 广西 海南
		50, 51, 52, 53, 54,         // 重庆 四川 贵州 云南 西藏
		61, 62, 63, 64, 65,         // 陕西 甘肃 青海 宁夏 新疆
		71, 81, 82, 91              // 台湾 香港 澳门 和国外
	];

	const provinceCode = parseInt(id.substring(0, 2));
	if (!validProvinceCodes.includes(provinceCode)) {
		return false;
	}

	// 校验码计算
	const weights: number[] = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];
	const codes: string[] = ["1", "0", "X", "9", "8", "7", "6", "5", "4", "3", "2"];

	let sum: number = 0;
	for (let i = 0; i < 17; i++) {
		let num = parseInt(id.charAt(i));
		sum += num * weights[i];
	}

	let checkCode = codes[sum % 11];
	return checkCode == id.charAt(17).toUpperCase();
}


export function isValidPassword(password: string): boolean {
    return password.length >= 8 && password.length <= 20;
}
